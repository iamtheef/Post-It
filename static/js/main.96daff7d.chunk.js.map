{"version":3,"sources":["Hooks/useToggle.js","AxiosRequestAuthUtil.js","Context/UserContext.js","Hooks/useInputState.js","Components/Login.js","Components/Register.js","Components/Layout/Navbar.js","Components/PostCard1.js","Components/Landing.js","Components/PrivProfile.js","Components/PublicProfile.js","Context/PostContext.js","Components/CommunitiesSelector.js","Components/TextEditor.js","Components/FileManager.js","Components/NewPost.js","Components/Post.js","App.js","serviceWorker.js","index.js"],"names":["useToggle","initialVal","useState","state","setState","e","setAuthToken","token","axios","defaults","headers","common","UserContext","createContext","value","setValue","target","Login","useContext","login","errors","useInputState","emailValue","handleEmailChange","resetEmail","passValue","handlePassChange","resetPass","onSubmit","preventDefault","email","password","className","style","minWidth","opacity","minHeight","src","alt","marginTop","marginRight","id","fontSize","msg","type","placeholder","name","onChange","href","Register","register","usernameValue","handleUsernameChange","pass2Value","handlePass2Change","resetPass2","username","password2","required","Navbar","user","logout","regModal","toggleRegModal","logModal","toggleLogModal","document","onkeydown","keyCode","role","aria-label","to","onClick","display","PostCard1","props","post","_id","community","img","color","moment","date","fromNow","title","body","width","marginLeft","file","filename","class","aria-hidden","comments","length","Landing","error","setError","posts","setPosts","useEffect","get","then","res","data","catch","map","key","PrivProfile","userId","match","params","setProfile","profile","alert","response","PostContext","PostProvider","history","useHistory","textPost","toggleTextPost","mediaPost","toggleMediaPost","linkPost","toggleLinkPost","postType","setPostType","setCommunity","changeTitle","resetTitle","setBody","setFile","link","changeLink","resetLink","setErrors","Provider","handlePostSection","handleSubmit","formData","FormData","newPost","append","console","log","JSON","stringify","push","children","CommunitySelector","dropdown","toggleDropdown","communities","setCommunities","undefined","setName","icon","setIcon","coms","aria-haspopup","aria-controls","com","handleCommunityChange","TextEditor","height","FileManager","setFilename","files","NewPost","marginBottom","rows","validLink","Post","postId","setPost","App","setUser","initialUser","StrictMode","exact","path","component","PublicProfile","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","localStorage","jwtToken","credits","setItem","jwt_decode","newUser","decoded","exp","Date","now","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.96daff7d.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction useToggle(initialVal = false) {\n  const [state, setState] = useState(initialVal);\n  const toggle = e => {\n    setState(!state);\n  };\n\n  return [state, toggle];\n}\n\nexport default useToggle;\n","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  axios.defaults.headers.common[\"Authorization\"] = \"\";\n  delete axios.defaults.headers.common[\"Authorization\"];\n\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = `${token}`;\n  }\n};\n\nexport default setAuthToken;\n","import React, { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport setAuthToken from \"../AxiosRequestAuthUtil\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const UserContext = createContext();\n\nexport function UserProvider(props) {\n  const [user, setUser] = useState(null);\n  const [errors, setErrors] = useState({});\n\n  // initial user\n  const initialUser = () => {\n    // check for valid token (if so, give persmissions)\n    if (localStorage.jwtToken) {\n      const decoded = jwt_decode(localStorage.jwtToken);\n      setAuthToken(localStorage.jwtToken);\n      setUser(decoded);\n\n      //check for expired token (if so, lougout)\n      if (decoded.exp < Date.now() / 1000) {\n        logout();\n      }\n    }\n  };\n\n  // hadling login\n  const login = credits => {\n    axios\n      .post(\"api/users/login\", credits)\n      .then(user => {\n        const token = user.data.token;\n        localStorage.setItem(\"jwtToken\", token);\n        setAuthToken(token);\n        setUser(jwt_decode(token));\n      })\n      .catch(e => setErrors(e.response.data));\n  };\n\n  //handling register\n  const register = newUser => {\n    axios\n      .post(\"/api/users/register\", newUser)\n      .then(res => setUser(res.data))\n      .catch(e => setErrors(e.response.data));\n  };\n\n  // handling logout\n  const logout = () => {\n    delete localStorage.jwtToken;\n    setAuthToken(null);\n    setUser(null);\n  };\n\n  return (\n    <UserContext.Provider\n      value={{ user, login, register, errors, logout, initialUser }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n","import { useState } from \"react\";\n\nexport default initialVal => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"../Context/UserContext\";\nimport useInputState from \"../Hooks/useInputState\";\n\nfunction Login() {\n  const { login, errors } = useContext(UserContext);\n  const [emailValue, handleEmailChange, resetEmail] = useInputState(\"\");\n  const [passValue, handlePassChange, resetPass] = useInputState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    let user = {\n      email: emailValue,\n      password: passValue\n    };\n    login(user);\n    resetEmail();\n    resetPass();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"container columns is-centered\">\n        <div className=\"column is-one-quarter\">\n          <img\n            style={{\n              minWidth: \"780px\",\n              opacity: \"0.3\",\n              minHeight: \"850px\"\n            }}\n            src=\"https://media.giphy.com/media/50OAJNulFBBrq/source.gif\"\n            alt=\"robot gif\"\n          />\n        </div>\n        <div\n          className=\"column is-three-quarters is-centered\"\n          style={{\n            marginTop: \"10%\",\n            marginRight: \"200px\"\n          }}\n        >\n          <h1 id=\"header\">\n            Login to your account on <span id=\"middle-header\">postit</span>\n          </h1>\n\n          <h1 className=\"help is-danger\" style={{ fontSize: \"15px\" }}>\n            {errors && errors.msg}\n          </h1>\n\n          <div className=\"field\">\n            <label className=\"label\">Email *</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Enter your email\"\n                name=\"email\"\n                value={emailValue}\n                onChange={handleEmailChange}\n              ></input>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Password *</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"password\"\n                placeholder=\"Enter your password\"\n                name=\"password\"\n                value={passValue}\n                onChange={handlePassChange}\n              ></input>\n            </div>\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button className=\"button is-dark\">Login</button>\n            </div>\n            <div className=\"control\">\n              <button className=\"button is-light\">Cancel</button>\n            </div>\n          </div>\n          <div className=\"login-prompts label\">\n            <a href=\"/\" style={{ marginRight: \"4px\" }}>\n              Forgot your username? ·\n            </a>\n            <a href=\"/\">Forgot your password?</a>\n            <p style={{ marginTop: \"20px\" }}>\n              New here? <a href=\"/\">Create your account</a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"../Context/UserContext\";\nimport useInputState from \"../Hooks/useInputState\";\n\nfunction Register() {\n  const { register, errors } = useContext(UserContext);\n  const [usernameValue, handleUsernameChange] = useInputState(\"\");\n  const [emailValue, handleEmailChange] = useInputState(\"\");\n  const [passValue, handlePassChange, resetPass] = useInputState(\"\");\n  const [pass2Value, handlePass2Change, resetPass2] = useInputState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      username: usernameValue,\n      email: emailValue,\n      password: passValue,\n      password2: pass2Value\n    };\n    register(newUser);\n    resetPass();\n    resetPass2();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"container columns is-centered\">\n        <div className=\"column is-one-quarter\">\n          <img\n            style={{\n              minWidth: \"780px\",\n              opacity: \"0.3\",\n              minHeight: \"850px\"\n            }}\n            src=\"https://media.giphy.com/media/l4FGGAlWYVMUciiJy/giphy.gif\"\n            alt=\"robot gif\"\n          />\n        </div>\n        <div\n          className=\"column is-three-quarters is-centered\"\n          style={{\n            marginTop: \"10%\",\n            marginRight: \"200px\"\n          }}\n        >\n          <h1 id=\"header\">\n            Create your account on <span id=\"middle-header\">postit</span> to\n            create posts and comment\n          </h1>\n          <div className=\"field\">\n            <label className=\"label\">Username *</label>\n            <div className=\"control\">\n              <input\n                className={`input ${errors.username && \"is-danger\"}`}\n                type=\"text\"\n                placeholder=\"Your username\"\n                name=\"username\"\n                value={usernameValue}\n                onChange={handleUsernameChange}\n              ></input>\n              <p className=\"help is-danger\">\n                {errors.username && errors.username}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Email *</label>\n            <div className=\"control\">\n              <input\n                className={`input ${errors.email && \"is-danger\"}`}\n                type=\"text\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                value={emailValue}\n                onChange={handleEmailChange}\n              ></input>\n              <p className=\"help is-danger\">{errors.email && errors.email}</p>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Password *</label>\n            <div className=\"control\">\n              <input\n                className={`input ${errors.password && \"is-danger\"}`}\n                type=\"password\"\n                placeholder=\"Create a strong password\"\n                name=\"password\"\n                value={passValue}\n                onChange={handlePassChange}\n              ></input>\n              <p className=\"help is-danger\">\n                {errors.password && errors.password}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Confirm Password *</label>\n            <div className=\"control\">\n              <input\n                className={`input ${errors.password2 && \"is-danger\"}`}\n                type=\"password\"\n                placeholder=\"Confirm your password\"\n                name=\"password2\"\n                value={pass2Value}\n                onChange={handlePass2Change}\n              ></input>\n              <p className=\"help is-danger\">\n                {errors.password2 && errors.password2}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <div className=\"control\">\n              <label className=\"checkbox\">\n                <input type=\"checkbox\" required /> We love robots,{\" \"}\n                <a href=\"/\">but we need to confirm you are not one. :]</a>\n              </label>\n            </div>\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button className=\"button is-dark\">Submit</button>\n            </div>\n            <div className=\"control\">\n              <button className=\"button is-light\">Cancel</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Register;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useToggle from \"../../Hooks/useToggle\";\nimport Login from \"../Login\";\nimport Register from \"../Register\";\nimport { UserContext } from \"../../Context/UserContext\";\n\nfunction Navbar() {\n  const { user, logout } = useContext(UserContext);\n  const [regModal, toggleRegModal] = useToggle(false);\n  const [logModal, toggleLogModal] = useToggle(false);\n\n  // handling esc key (closes modals if any open)\n  document.onkeydown = e => {\n    if (e.keyCode === 27) {\n      if (logModal) toggleLogModal();\n      if (regModal) toggleRegModal();\n    }\n  };\n\n  return (\n    <nav\n      className=\"navbar is-light is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <Link to=\"/\" className=\"navbar-brand navbar-item\">\n        <img\n          src=\"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fwww.stickpng.com%2Fassets%2Fimages%2F587389d8f3a71010b5e8ef4b.png&f=1&nofb=1\"\n          alt=\"logo\"\n        />\n        <img\n          src=\"https://media.giphy.com/media/QTfXEhq05P5snynFt5/giphy.gif\"\n          alt=\"logo\"\n        ></img>\n      </Link>\n\n      <div className=\"navbar-item has-dropdown is-hoverable\">\n        <Link className=\"navbar-link\" to=\"/\">\n          Sort By\n        </Link>\n\n        <div className=\"navbar-dropdown\">\n          <a href=\"/\" className=\"navbar-item\">\n            Hot\n          </a>\n          <a href=\"/\" className=\"navbar-item\">\n            Lastest\n          </a>\n          <a href=\"/\" className=\"navbar-item\">\n            Popular\n          </a>\n        </div>\n      </div>\n\n      <input type=\"text\" id=\"search\" placeholder=\"Search for a post\"></input>\n\n      {!user ? (\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              <button className=\"button register\" onClick={toggleRegModal}>\n                Sign up\n              </button>\n              <div\n                className=\"modal\"\n                style={{ display: regModal ? \"block\" : \"none\" }}\n              >\n                <div\n                  className=\"modal-background\"\n                  onClick={toggleRegModal}\n                ></div>\n                <div\n                  className=\"modal-content has-background-white is-centered\"\n                  onClick={errors => {\n                    if (!errors && regModal) toggleRegModal();\n                  }}\n                >\n                  <Register />\n                </div>\n              </div>\n\n              <button\n                className=\"button is-light login\"\n                onClick={toggleLogModal}\n              >\n                Login\n              </button>\n              <div\n                className=\"modal\"\n                style={{ display: logModal ? \"block\" : \"none\" }}\n              >\n                <div\n                  className=\"modal-background\"\n                  onClick={toggleLogModal}\n                ></div>\n                <div className=\"modal-content has-background-white is-centered\">\n                  <Login\n                    onClick={errors => {\n                      if (!errors && logModal) toggleLogModal();\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"navbar-item has-dropdown is-hoverable\">\n          <Link className=\"navbar-link\" to=\"\">\n            <img\n              alt=\"user logo\"\n              className=\"user-avatar\"\n              src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fstyles.redditmedia.com%2Ft5_ag5gy%2Fstyles%2FprofileIcon_kveeu0ih46901.png%3Fwidth%3D256%26height%3D256%26crop%3D256%3A256%2Csmart%26s%3Dd68b7fef8cd1bf7d4d6e6c06c57bc80083909665&f=1&nofb=1\"\n            ></img>\n            {user.username}\n          </Link>\n\n          <div className=\"navbar-dropdown\">\n            <Link className=\"navbar-item\" to=\"/profile\">\n              Profile\n            </Link>\n            <Link className=\"navbar-item\" to=\"/\">\n              Settings\n            </Link>\n            <Link onClick={logout} className=\"navbar-item\" to=\"/\">\n              Logout\n            </Link>\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default function PostCard1(props) {\n  const post = props.post;\n\n  return (\n    <Link to={`/posts/${post._id}`}>\n      <div className=\"is-parent\">\n        <div className=\"column body-column\">\n          <div className=\"columns\">\n            <div className=\"column is-1 sidebar-column\"></div>\n            <article className=\"tile notification\">\n              <div className=\"content\">\n                <div className=\"columns\">\n                  <div className=\"column is-1\">\n                    <figure className=\"image\">\n                      <img\n                        className=\"is-rounded community-icon-landing\"\n                        src={post.community.img}\n                        alt=\"community logo\"\n                      ></img>\n                    </figure>\n                  </div>\n\n                  <p className=\"postCard1-header column is-10\">\n                    <Link to={`/communities/${post.community._id}`}>\n                      <strong>\n                        <span\n                          style={{\n                            color: \"#3f3d3e\"\n                          }}\n                        >\n                          <span className=\"underline\">\n                            p/{post.community.name}\n                          </span>\n                        </span>\n                      </strong>\n                    </Link>\n                    {\" • \"}\n                    Posted by{\" \"}\n                    <Link to={`/profile/${post.user}`}>\n                      <span className=\"underline\">{post.user.username}</span>\n                    </Link>{\" \"}\n                    {moment(post.date).fromNow()}\n                  </p>\n                </div>\n                <div className=\"postCard1-body\">\n                  <p className=\"postCard1-title\">{post.title}</p>\n                  {post.type === \"textPost\" && (\n                    <div className=\"postCard1-body\">{post.body}</div>\n                  )}\n                  {post.type === \"mediaPost\" && (\n                    <figure\n                      className=\"image is-4by5 content\"\n                      style={{\n                        width: \"30vw\",\n                        marginTop: \"-10px\",\n                        marginLeft: \"-7px\"\n                      }}\n                    >\n                      <img\n                        src={`uploads/${post.file.id}/file/${post.file.filename}`}\n                      />\n                    </figure>\n                  )}\n\n                  {post.type === \"linkPost\" && (\n                    <iframe src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/237079253&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true\"></iframe>\n                  )}\n                </div>\n                <div className=\"postInfo columns\">\n                  <div className=\"postInfoChild column\">\n                    <i class=\"fa fa-comment\" aria-hidden=\"true\" />\n                    <p className=\"infoTitle\">{post.comments.length} comments</p>\n                  </div>\n                  <div className=\"postInfoChild column\">\n                    <i class=\"fa fa-trophy\" aria-hidden=\"true\" />\n                    <p className=\"infoTitle\">Give Award</p>\n                  </div>\n                </div>\n              </div>\n            </article>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PostCard1 from \"./PostCard1\";\n\nexport default function Landing() {\n  const [error, setError] = useState();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    axios\n      .get(\"/api/posts/all\")\n      .then(res => setPosts(res.data))\n      .catch(e => setError(e));\n  }, [setPosts]);\n\n  return (\n    <div>\n      <div className=\"container columns is-centered\">\n        <p className=\"help is-danger\">{error && error}</p>\n\n        <div className=\"column is-6 is-centered\">\n          <Link to=\"/newpost\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Make a new post\"\n              style={{ marginTop: \"80px\" }}\n            ></input>\n          </Link>\n\n          <ul>\n            {posts.map(post => (\n              <li key={post._id}>\n                <PostCard1 post={post} />\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction PrivProfile() {\n  return (\n    <div>\n      <h1 style={{ fontSize: \"120px\" }}>Welcome to the user profile!</h1>\n    </div>\n  );\n}\n\nexport default PrivProfile;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction PrivProfile(props) {\n  const userId = props.match.params.id;\n  const [profile, setProfile] = useState();\n  useEffect(() => {\n    axios\n      .get(`/profiles/${userId}`)\n      .then(profile => setProfile(profile))\n      .catch(e => alert(e.response.data));\n  });\n  return (\n    <div>\n      <h1 style={{ fontSize: \"120px\" }}>Welcome to the public user profile!</h1>\n    </div>\n  );\n}\n\nexport default PrivProfile;\n","import React, { createContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useToggle from \"../Hooks/useToggle\";\nimport useInputState from \"../Hooks/useInputState\";\nimport axios from \"axios\";\n\nexport const PostContext = createContext();\n\nexport function PostProvider(props) {\n  //\n  //\n  const history = useHistory();\n  //\n  // post section hooks\n  const [textPost, toggleTextPost] = useToggle(true);\n  const [mediaPost, toggleMediaPost] = useToggle(false);\n  const [linkPost, toggleLinkPost] = useToggle(false);\n  const [postType, setPostType] = useState(\"textPost\");\n  const [community, setCommunity] = useState(\"\");\n\n  // inputs\n  const [title, changeTitle, resetTitle] = useInputState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [link, changeLink, resetLink] = useInputState(\"\");\n  const [errors, setErrors] = useState({});\n\n  //\n  // functions\n  const handlePostSection = e => {\n    e.preventDefault();\n    switch (e.target.name) {\n      case \"textPost\":\n        if (linkPost) toggleLinkPost();\n        if (mediaPost) toggleMediaPost();\n        if (!textPost) toggleTextPost();\n        setPostType(\"textPost\");\n        break;\n\n      case \"mediaPost\":\n        if (textPost) toggleTextPost();\n        if (linkPost) toggleLinkPost();\n        if (!mediaPost) toggleMediaPost();\n        setPostType(\"mediaPost\");\n        break;\n      case \"linkPost\":\n        if (mediaPost) toggleMediaPost();\n        if (textPost) toggleTextPost();\n        if (!linkPost) toggleLinkPost();\n        setPostType(\"linkPost\");\n    }\n  };\n\n  function resetAllFields() {\n    setCommunity(\"\");\n    resetTitle();\n    setBody(\"\");\n    setFile(null);\n    resetLink();\n    setErrors({});\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    const newPost = { title, type: postType, community };\n\n    switch (postType) {\n      case \"textPost\":\n        newPost.body = body;\n        break;\n      case \"mediaPost\":\n        formData.append(\"file\", file);\n        break;\n      case \"linkPost\":\n        newPost.link = link;\n        break;\n      default:\n        console.log(\"No post type selected!\");\n    }\n    formData.append(\"data\", JSON.stringify(newPost));\n\n    axios\n      .post(\"/api/posts/new\", formData)\n      .then(post => {\n        resetAllFields();\n        history.push(`/posts/${post.data._id}`);\n      })\n      .catch(e => {\n        setErrors(e.response.data);\n      });\n  };\n\n  return (\n    <PostContext.Provider\n      value={{\n        handlePostSection,\n        textPost,\n        mediaPost,\n        linkPost,\n        postType,\n        setPostType,\n        body,\n        setBody,\n        file,\n        setFile,\n        handleSubmit,\n        changeLink,\n        changeTitle,\n        errors,\n        community,\n        setCommunity\n      }}\n    >\n      {props.children}\n    </PostContext.Provider>\n  );\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport useToggle from \"../Hooks/useToggle\";\nimport axios from \"axios\";\nimport { PostContext } from \"../Context/PostContext\";\n\nfunction CommunitySelector() {\n  // communities hooks\n  const [dropdown, toggleDropdown] = useToggle(false);\n  const [communities, setCommunities] = useState([]);\n  const [name, setName] = useState(undefined);\n  const [icon, setIcon] = useState(undefined);\n  const { community, setCommunity, errors } = useContext(PostContext);\n  const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/posts/communities/all\")\n      .then(coms => setCommunities(coms.data))\n      .catch(e => setError(e.response.data));\n  }, [setCommunities]);\n\n  const handleCommunityChange = (e, name, id) => {\n    setName(name);\n    e.preventDefault();\n    setCommunity(id);\n    setIcon(e.target.href);\n    toggleDropdown();\n  };\n\n  return (\n    <>\n      <strong>\n        <p className=\"help is-danger is-centered\">{error && error}</p>\n      </strong>\n      <div\n        className={`dropdown ${dropdown && \"is-active\"}`}\n        style={{ marginRight: \"15px\", marginTop: \"11px\" }}\n      >\n        <div className=\"dropdown-trigger\">\n          <button\n            className=\"button\"\n            aria-haspopup=\"true\"\n            aria-controls=\"dropdown-menu\"\n            onClick={toggleDropdown}\n          >\n            <div style={{ marginTop: \"5px\" }}>\n              {icon && (\n                <figure className=\"image comLogo\">\n                  <img\n                    className=\"is-rounded\"\n                    src={icon}\n                    alt=\"community logo\"\n                  ></img>\n                </figure>\n              )}\n            </div>\n\n            <span style={{ width: \"140px\" }}>\n              {name ? name : \"Choose community\"}\n            </span>\n\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n            </span>\n          </button>\n        </div>\n\n        <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {communities.map(com => (\n              <ul key={com._id}>\n                <a\n                  href={com.img}\n                  className=\"dropdown-item\"\n                  name={com.name}\n                  onClick={e => handleCommunityChange(e, com.name, com._id)}\n                >\n                  {com.name}\n                </a>\n              </ul>\n            ))}\n          </div>\n        </div>\n      </div>\n      <p className=\"help is-danger\">{errors.community && errors.community}</p>\n    </>\n  );\n}\n\nexport default CommunitySelector;\n","import React, { useContext } from \"react\";\nimport { PostContext } from \"../Context/PostContext\";\nimport ReactQuill from \"react-quill\"; // ES6\nimport \"react-quill/dist/quill.snow.css\"; // ES6\n\nfunction TextEditor() {\n  const { body, setBody } = useContext(PostContext);\n\n  return (\n    <ReactQuill\n      value={body}\n      style={{ height: \"100px\" }}\n      onChange={setBody}\n      placeholder=\"Write your post here\"\n    />\n  );\n}\n\nexport default TextEditor;\n","import React, { useContext, useState } from \"react\";\nimport { PostContext } from \"../Context/PostContext\";\n\nexport default function FileManager() {\n  const { setFile } = useContext(PostContext);\n  const [filename, setFilename] = useState(\"Choose File\");\n\n  const handleChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  return (\n    <div className=\"field\">\n      <div className=\"file\">\n        <label className=\"file-label\">\n          <input\n            className=\"file-input\"\n            type=\"file\"\n            name=\"image\"\n            onChange={handleChange}\n          />\n          <span className=\"file-cta\">\n            <span className=\"file-icon\">\n              <i className=\"fas fa-upload\"></i>\n            </span>\n            <span className=\"file-label\">{filename}</span>\n          </span>\n        </label>\n      </div>\n      <p className=\"help is-danger is-centered\"></p>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { PostContext } from \"../Context/PostContext\";\nimport CommunitySelector from \"./CommunitiesSelector\";\nimport TextEditor from \"./TextEditor\";\nimport FileManager from \"./FileManager\";\n\nfunction NewPost() {\n  const {\n    handlePostSection,\n    textPost,\n    mediaPost,\n    linkPost,\n    handleSubmit,\n    title,\n    changeTitle,\n    changeLink,\n    link,\n    errors\n  } = useContext(PostContext);\n\n  return (\n    <>\n      {/* HEADER & TITLE */}\n      <div className=\"container column is-8 newPost\">\n        <p className=\"header3\">Create Post</p>\n        <hr style={{ marginBottom: \"60px\" }}></hr>\n        <div className=\"columns\" style={{ marginBottom: \"10px\" }}>\n          <div className=\"column\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Write a nice title\"\n              onChange={changeTitle}\n              value={title}\n            ></input>\n            <p className=\"help is-danger\">{errors.title && errors.title}</p>\n          </div>\n          <div\n            className=\"column\"\n            style={{ marginTop: \"-15px\", marginRight: \"-50%\" }}\n          >\n            <CommunitySelector />\n          </div>\n        </div>\n        {/* TABS */}\n        <div className=\"tabs is-centered is-boxed\" onClick={handlePostSection}>\n          <ul>\n            <li className={`${textPost && \"is-active\"}`}>\n              <a name=\"textPost\" href=\"/\">\n                <span className=\"icon is-small\">\n                  <i className=\"fa fa-font\" aria-hidden=\"true\"></i>\n                </span>\n                Text\n              </a>\n            </li>\n\n            <li className={`${mediaPost && \"is-active\"}`}>\n              <a name=\"mediaPost\" href=\"/\">\n                <i\n                  className=\"icon is-small fa fa-camera\"\n                  aria-hidden=\"true\"\n                ></i>\n                Image/Video\n              </a>\n            </li>\n            <li className={`${linkPost && \"is-active\"}`}>\n              <a name=\"linkPost\" href=\"/\">\n                <span className=\"icon is-small\">\n                  <i className=\"fa fa-link\" aria-hidden=\"true\"></i>\n                </span>\n                Link\n              </a>\n            </li>\n          </ul>\n        </div>\n        {/* Sections */}\n\n        {/* \n        //\n        //\n        Text post*/}\n        <div style={{ display: textPost ? \"block\" : \"none\" }}>\n          <TextEditor />\n          <ul>\n            <li>\n              <p className=\"help is-danger\">{errors.body && errors.body}</p>\n            </li>\n            <li>\n              <p className=\"help is-danger\">{errors.length && errors.length}</p>\n            </li>\n          </ul>\n        </div>\n        {/*\n        //\n        //\n        Media post*/}\n        <div style={{ display: mediaPost ? \"block\" : \"none\" }}>\n          <FileManager />\n          <p className=\"help is-danger\">{errors.file && errors.file}</p>\n        </div>\n\n        {/* \n        //\n        //\n        \n        Link post*/}\n        <div style={{ display: linkPost ? \"block\" : \"none\" }}>\n          <input\n            className=\"textarea\"\n            placeholder=\"URL(required)\"\n            rows=\"10\"\n            onChange={changeLink}\n            value={link}\n          ></input>\n          <ul>\n            <li>\n              <p className=\"help is-danger\">{errors.link && errors.link}</p>\n            </li>\n            <li>\n              <p className=\"help is-danger\">\n                {errors.validLink && errors.validLink}\n              </p>\n            </li>\n          </ul>\n        </div>\n\n        {/* BUTTONS*/}\n        <div style={{ marginTop: \"60px\" }}>\n          <button\n            className=\"button is-dark\"\n            style={{ marginRight: \"10px\" }}\n            onClick={handleSubmit}\n          >\n            Submit\n          </button>\n          <button className=\"button is-light\">Cancel</button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default NewPost;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Post(props) {\n  const postId = props.match.params.id;\n  const [post, setPost] = useState({});\n\n  useEffect(() => {\n    axios\n      .get(`/api/posts/${postId}`)\n      .then(res => {\n        setPost(res.data);\n        console.log(res);\n      })\n      .catch(e => console.log(e));\n  }, [setPost]);\n\n  // switch (post.type) {\n  //   case \"textPost\":\n  //     if (linkPost) toggleLinkPost();\n  //     if (mediaPost) toggleMediaPost();\n  //     if (!textPost) toggleTextPost();\n  //     setPostType(\"textPost\");\n  //     break;\n\n  //   case \"mediaPost\":\n  //     if (textPost) toggleTextPost();\n  //     if (linkPost) toggleLinkPost();\n  //     if (!mediaPost) toggleMediaPost();\n  //     setPostType(\"mediaPost\");\n  //     break;\n  //   case \"linkPost\":\n  //     if (mediaPost) toggleMediaPost();\n  //     if (textPost) toggleTextPost();\n  //     if (!linkPost) toggleLinkPost();\n  //     setPostType(\"linkPost\");\n  // }\n\n  return (\n    <div>\n      <div style={{ display: post ? \"block\" : \"none\" }}>\n        <h1 style={{ marginTop: \"200px\" }}>{post.title}</h1>\n        <h4>{post.body ? post.body : \"other type of post\"}</h4>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Layout/Navbar\";\nimport Landing from \"./Components/Landing\";\nimport PrivProfile from \"./Components/PrivProfile\";\nimport PublicProfile from \"./Components/PublicProfile\";\nimport NewPost from \"./Components/NewPost\";\nimport Post from \"./Components/Post\";\nimport { PostProvider } from \"./Context/PostContext\";\nimport { UserContext } from \"./Context/UserContext\";\n\nfunction App() {\n  const { setUser, initialUser } = useContext(UserContext);\n  useEffect(() => {\n    initialUser();\n  }, [setUser]);\n\n  return (\n    <React.StrictMode>\n      <Router>\n        <Navbar></Navbar>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/profile\" component={PrivProfile} />\n          <Route exact path=\"/profile/:id\" component={PublicProfile} />\n          <PostProvider>\n            <Route exact path=\"/newpost\" component={NewPost} />\n            <Route exact path=\"/posts/:id\" component={Post} />\n          </PostProvider>\n        </div>\n      </Router>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { UserProvider } from \"./Context/UserContext\";\n\nReactDOM.render(\n  <UserProvider>\n    <App />\n  </UserProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}